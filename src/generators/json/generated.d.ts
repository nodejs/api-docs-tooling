/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type NodeJsAPIDocumentationSchema = DocumentRoot & (Module | Text);
/**
 * A JavaScript module.
 */
export type Module = SectionBase & {
  type: 'module';
  /**
   * https://jsdoc.app/tags-see
   */
  '@see': string;
  /**
   * https://jsdoc.app/tags-module
   */
  '@module': string;
  /**
   * Classes exported from this module.
   */
  classes?: Class[];
  /**
   * Methods exported from this module.
   */
  methods?: Method[];
  /**
   * APIs that are available globally.
   */
  globals?: (Class | Method)[];
  properties?: Property[];
  [k: string]: unknown;
};
export type Text = SectionBase;
/**
 * Node.js version number
 */
export type NodeCoreVersion = string;
export type Class = SectionBase & {
  type: 'class';
  '@constructor': MethodSignature[];
  methods: Method[];
  staticMethods: Method[];
  properties: Property[];
  [k: string]: unknown;
};
/**
 * A JavaScript function.
 */
export type Method = SectionBase & {
  type: 'method';
  signatures: MethodSignature[];
  [k: string]: unknown;
};
/**
 * A property on a JavaScript object or class.
 */
export type Property = SectionBase & {
  type: 'property';
  /**
   * JavaScript type of the property.
   */
  '@type'?: string | [string, ...string[]];
  /**
   * Is this property modifiable by user code?
   */
  mutable?: boolean;
  [k: string]: unknown;
};

/**
 * Common properties found at the root of each document.
 */
export interface DocumentRoot {
  /**
   * The path to the Markdown source used to generate this document. It is relative to the Node.js repository root.
   */
  source: string;
  [k: string]: unknown;
}
/**
 * Common properties found in each section of a document.
 */
export interface SectionBase {
  /**
   * Type of the section
   */
  type: 'module' | 'class' | 'method' | 'property' | 'text';
  /**
   * https://jsdoc.app/tags-name
   */
  '@name': string;
  /**
   * Description of the section.
   */
  description?: string;
  /**
   * Sections that just hold further text on this section.
   */
  text?: Text[];
  /**
   * https://jsdoc.app/tags-example
   */
  '@example'?: string | string[];
  /**
   * https://jsdoc.app/tags-deprecated
   */
  '@deprecated'?: NodeCoreVersion[];
  stability?: Stability;
  /**
   * The changes this API has underwent.
   */
  changes?: Change[];
  /**
   * https://jsdoc.app/tags-since
   */
  '@since'?: NodeCoreVersion[];
  /**
   * todo what does this describe lol
   */
  napiVersion?: number[];
  /**
   * Versions that this was removed in.
   */
  removedIn?: NodeCoreVersion[];
  [k: string]: unknown;
}
/**
 * Describes the stability of an object.
 */
export interface Stability {
  /**
   * The stability value.
   */
  value: number;
  /**
   * Textual representation of the stability.
   */
  text: string;
  [k: string]: unknown;
}
export interface Change {
  version: NodeCoreVersion[];
  /**
   * URL to the PR that introduced this change.
   */
  prUrl?: string;
  /**
   * Description of the change.
   */
  description: string;
  [k: string]: unknown;
}
export interface MethodSignature {
  parameters?: MethodParameter[];
  /**
   * The method signature's return type.
   */
  '@returns'?: string | [string, ...string[]];
  [k: string]: unknown;
}
export interface MethodParameter {
  /**
   * Name of the parameter.
   */
  '@name': string;
  /**
   * Type of the parameter
   */
  '@type': string | [string, ...string[]];
  description?: string;
  /**
   * The parameter's default value
   */
  '@default'?: string;
  [k: string]: unknown;
}
